# K8s Gateway API

* <https://gateway-api.sigs.k8s.io/>

* OOSS project, managed by the SIG-NETWORK community.
  modelling service networking in Kubernetes. 

  ```
  Main Objects
  GatewayClass
  Gateway
  HTTPRoute, TCPRoute, Service, etc
  ```

## Gateway API Model
* Role-oriented: API resources model organizational roles that use 
                 and configure K8s service networking.
*      Portable: Just as Ingress, a universal specification with 
                  numerous implementations.
*    Expressive: core functionality for things like header-based matching,
                 traffic weighting, and other capabilities that were only
                 possible in Ingress through custom annotations.
*    Extensible: allows for custom resources to be linked at various layers 
                 of the API.

* TODO: 
  <https://tetrate.io/blog/why-the-gateway-api-is-the-unified-future-of-ingress-for-kubernetes-and-service-mesh/>


[[{]]
## datawire Ambassador

* Knative API gateway for microservices built on the Envoy Proxy

* <https://github.com/datawire/ambassador>

* TODO: How does it compares/complement/overlaps to Istio or Traeffik?
[[}]]

<!--
The detailed process is as follows:
- The infrastructure provider provides GatewayClass and Gateway 
  Controller.
- Platform operator deploy Gateway (multiple deployments possible, or 
  using different GatewayClasses).
- Gateway Controller continuously monitors changes to the 
  GatewayClass and Gateway objects in the Kubernetes API Server.
- Gateway controller will create the corresponding gateway based on 
  cluster operations and maintenance configuration.
- Application developers apply xRoutes and bind them to the service.
- If in the cloud, the client accesses the load balancer for that 
  ingress gateway.<br/>
  The gateway will route to the corresponding back-end service based 
  on the matching criteria in the traffic request.
-->
