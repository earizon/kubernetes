# Argo declarative GitOps CI/CD 

## Quick Start
```
$ kubectl create namespace argocd
$ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
```
* Git repo is used as source of truth for defining the desired application state.
* Argo CD is implemented as a kubernetes controller which continuously
  monitors running applications and compares the current, live state
  against the desired target state (as specified in the Git repo).

* Kubernetes manifests can be specified in several ways:
  - kustomize applications
  - helm charts
  - jsonnet files
  - Plain directory of YAML/json manifests
  - Any custom config management tool configured as a config management plugin


## Features:
- Automated deployment of applications to specified target environments
- Support for multiple config management/templating tools
  - Kustomize
  - Helm
  - Jsonnet
  - plain-YAML
- Ability to manage and deploy to multiple clusters
- SSO Integration (OIDC, OAuth2, LDAP, SAML 2.0, GitHub, GitLab, Microsoft, LinkedIn)
- Multi-tenancy and RBAC policies for authorization
- Rollback/Roll-anywhere to any application configuration committed in Git repository
- Health status analysis of application resources
- Automated configuration drift detection and visualization
- Automated or manual syncing of applications to its desired state
- Web UI which provides real-time view of application activity
- CLI for automation and CI integration
- Webhook integration (GitHub, BitBucket, GitLab)
- Access tokens for automation
- PreSync, Sync, PostSync hooks to support complex application 
  rollouts (e.g.blue/green & canary upgrades)
- Audit trails for application events and API calls
- Prometheus metrics
- Parameter overrides for overriding helm parameters in Git
